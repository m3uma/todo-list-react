{"version":3,"sources":["GlobalStyle.js","Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","App.js","reportWebVitals.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","theme","color","gallery","MainForm","styled","form","breakpoint","mobileMax","Input","input","alto","Button","button","teal","white","Form","addNewTask","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","value","placeholder","onChange","target","className","List","ul","Item","li","hidden","css","Content","span","done","toggleDone","forestGreen","remove","crimson","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","onClick","id","content","ButtonsDiv","div","silver","Buttons","toggleHideDone","setAllDone","length","disabled","every","MainSection","section","Header","header","Title","h2","Body","Section","title","body","extraHeaderContent","MainContainer","main","Container","children","getInitialTasks","tasksFromLocalStorage","localStorage","getItem","JSON","parse","App","setHideDone","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","black","document","getElementById"],"mappings":"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","file":"static/js/main.af5a6eed.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n    box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n    box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n    font-family: 'Montserrat', sans-serif;\r\n    background: ${({ theme }) => theme.color.gallery};\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const MainForm = styled.form`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    grid-gap: 20px;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    padding: 10px;\r\n    border: 1px solid ${({ theme }) => theme.color.alto};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 10px;\r\n    background: ${({ theme }) => theme.color.teal};\r\n    color: ${({ theme }) => theme.color.white};\r\n    border: none;\r\n    transition: 0.3s;\r\n\r\n    &:hover{\r\n        filter: brightness(110%);\r\n        transform: scale(1.1);\r\n    }\r\n\r\n    &:active{\r\n        filter: brightness(120%);\r\n    }\r\n`;","import { useState } from \"react\";\r\nimport { MainForm, Input, Button } from \"./styled\";\r\n\r\nconst Form = ({addNewTask}) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const trimmedNewTaskContent = newTaskContent.trim();\r\n\r\n        if(!trimmedNewTaskContent){\r\n            return;\r\n        }\r\n        \r\n        addNewTask(trimmedNewTaskContent);\r\n        setNewTaskContent(\"\");\r\n    }\r\n    \r\n    return (\r\n        <MainForm onSubmit={onFormSubmit}>\r\n            <Input\r\n                value={newTaskContent}\r\n                placeholder=\"What should I do?\"\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <Button className=\"form__button\">Add task</Button>\r\n        </MainForm>\r\n    )\r\n}\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 10px;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border-bottom: 1px solid ${({ theme }) => theme.color.alto};\r\n\r\n    ${({ hidden }) => hidden && css`\r\n    display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    color: ${({ theme }) => theme.color.white};\r\n    width: 30px;\r\n    height: 30px;\r\n    padding: 0;\r\n    transition: background 0.3s;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        background: ${({ theme }) => theme.color.forestGreen};        \r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        background: ${({ theme }) => theme.color.crimson};\r\n    `}\r\n\r\n    &:hover{\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    &:active{\r\n        filter: brightness(120%);\r\n    }      \r\n`;","import { List, Item, Content, Button } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <List>\r\n        {tasks.map(task => (\r\n            <Item\r\n                key={task.id}\r\n                hidden={task.done && hideDone}\r\n            >\r\n                <Button\r\n                    toggleDone\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"✔\" : \"\"}\r\n                </Button>\r\n                <Content done={task.done}>\r\n                    {task.content}\r\n                </Content>\r\n                <Button\r\n                    remove\r\n                    onClick={() => removeTask(task.id)}\r\n                >\r\n                    ✘ </Button>\r\n            </Item>\r\n        ))}\r\n    </List >\r\n);\r\n\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nexport const ButtonsDiv = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background: transparent;\r\n    color: ${({ theme }) => theme.color.teal};\r\n    border: none;\r\n    margin: 0 0 0 20px;\r\n    transition: color 0.3s;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        flex-basis: 100%;\r\n        margin: 10px;\r\n    }\r\n\r\n    &:hover{\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    &:disabled{\r\n        color: ${({ theme }) => theme.color.silver};\r\n    }\r\n`;","import { ButtonsDiv, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <ButtonsDiv>\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <Button onClick={toggleHideDone}>\r\n                    {hideDone ? \"Show\" : \"Hide\"} done\r\n                </Button>\r\n                <Button\r\n                    onClick={setAllDone}\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    Complete all\r\n                </Button>\r\n            </>\r\n        )}\r\n    </ButtonsDiv>\r\n)\r\n\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const MainSection = styled.section`\r\n    margin: 10px 0;\r\n    background: ${({ theme }) => theme.color.white};\r\n    box-shadow: 0 0 5px ${({ theme }) => theme.color.alto};\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    border-bottom: 1px solid ${({ theme }) => theme.color.alto};\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 20px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    font-size: 20px;\r\n    margin: 0;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n    padding: 20px;\r\n`;","import { MainSection, Header, Title, Body } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <MainSection>\r\n    <Header>\r\n      <Title>\r\n        {title}\r\n      </Title>\r\n      {extraHeaderContent}\r\n    </Header>\r\n    <Body>\r\n      {body}\r\n    </Body>\r\n  </MainSection>\r\n)\r\n\r\nexport default Section;","const Header = ({ title }) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const MainContainer = styled.main`\r\n    max-width: 900px;\r\n    padding: 20px;\r\n    margin: 0 auto;\r\n`;","import { MainContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <MainContainer>\r\n        {children}\r\n    </MainContainer>\r\n);\r\n\r\nexport default Container;","import Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport { useEffect, useState } from \"react\";\n\nconst getInitialTasks = () => {\n  const tasksFromLocalStorage = localStorage.getItem(\"tasks\");\n\n  return tasksFromLocalStorage\n    ? JSON.parse(tasksFromLocalStorage)\n    : []\n}\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState(getInitialTasks);\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  }\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  }\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n      return task;\n    }));\n  }\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task,\n      done: true,\n    })));\n  };\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      },\n    ])\n  };\n\n  return (\n    <Container>\n      <Header title=\"TO DO LIST\" />\n      <Section\n        title=\"Add new task...\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n\n      <Section\n        title=\"To do list\"\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />}\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />}\n      />\n\n    </Container>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    color: {\r\n        black: \"#000\",\r\n        silver: \"#ccc\",\r\n        alto: \"#ddd\",\r\n        gallery: \"#eee\",\r\n        white: \"#fff\",\r\n        teal: \"#008080\",\r\n        crimson: \"#db143c\",\r\n        forestGreen: \"#228c22\",\r\n    },\r\n    breakpoint: {\r\n        mobileMax: 767,\r\n    },\r\n}"],"sourceRoot":""}